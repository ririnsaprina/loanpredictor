# -*- coding: utf-8 -*-
"""streamlit md

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1abKW7ZtIKr1f3n5Oksk5kH6ghWQATQXz
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import joblib
# 
# # Load model
# model = joblib.load('xgboostmodel.pkl')
# 
# st.title("Loan Approval Prediction")
# 
# # Form input
# with st.form("form"):
#     st.header("Personal Information")
#     person_age = st.number_input("Age", min_value=18, max_value=90, value=30,
#                                  help = "Enter you age (between 18-90)")
#     person_gender = st.selectbox("Gender", ["Male", "Female"], help = "Enter your gender")
#     person_education = st.selectbox("Education", ["High School", "College", "Grad School"],
#                                     help = "Select your highest education level")
#     person_income = st.number_input("Income", value=50000,
#                                     help = "Enter your monthly income (in local currency)")
#     person_emp_exp = st.number_input("Employment Experience (Years)", value=5,
#                                      help = "Enter the total years of work experience")
#     person_home_ownership = st.selectbox("Home Ownership", ["Rent", "Own", "Mortgage"],
#                                          help = "Select your current home owenership status")
# 
#     st.header("Loan Information")
#     loan_amnt = st.number_input("Loan Amount", value=10000, help = "Enter your amount of the loan requested")
#     loan_intent = st.selectbox("Loan Intent", ["Personal", "Medical", "Venture", "Education", "Home", "Debt consolidation"],
#                                help = "Select the purpose of your loan")
#     loan_int_rate = st.number_input("Interest Rate (%)", value=11.5,
#                                     help = "Enter the interest rate (%) applied to the loan")
#     loan_percent_income = st.slider("Loan Percent Income", 0.0, 1.0, 0.2,
#                                     help = "What portion of monthly income will go to loan repayment")
#     cb_person_cred_hist_length = st.slider("Credit History Length (Years)", 1, 30, 3,
#                                            help = "Enter the length of the applicant's credit history in years")
#     credit_score = st.number_input("Credit Score", value=700, help = "Enter the applicant's credit score (e.g., between 300 and 850)")
#     previous_loan_defaults_on_file = st.selectbox("Previous Loan Defaults", ["Y", "N"],
#                                                   help = "Has you previously defaulted on a loan? (Y = Yes, N = No)")
# 
#     submitted = st.form_submit_button("PREDICT")
# 
# if submitted:
#     input_df = pd.DataFrame([{
#         'person_age': person_age,
#         'person_gender': person_gender,
#         'person_education': person_education,
#         'person_income': person_income,
#         'person_emp_exp': person_emp_exp,
#         'person_home_ownership': person_home_ownership,
#         'loan_amnt': loan_amnt,
#         'loan_intent': loan_intent,
#         'loan_int_rate': loan_int_rate,
#         'loan_percent_income': loan_percent_income,
#         'cb_person_cred_hist_length': cb_person_cred_hist_length,
#         'credit_score': credit_score,
#         'previous_loan_defaults_on_file': previous_loan_defaults_on_file
#     }])
# 
#     catcols = ['person_gender', 'person_education', 'person_home_ownership',
#                'loan_intent', 'previous_loan_defaults_on_file']
#     for col in catcols:
#         input_df[col] = input_df[col].astype('category')
# 
# 
#     pred = model.predict(input_df)[0]
#     if pred == 1:
#         st.success("APPROVE")
#     else:
#         st.error("REJECTED")
#